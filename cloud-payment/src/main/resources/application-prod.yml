spring:
  application:
    name: cloud-payment

  datasource:
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      jdbc-url: jdbc:mysql://localhost:3306/sundz?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&relaxAutoCommit=true&autoCommit=true&useSSL=false&serverTimezone=Asia/Shanghai
    url: jdbc:mysql://localhost:3306/sundz?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&relaxAutoCommit=true&autoCommit=true&useSSL=false&serverTimezone=Asia/Shanghai
    type: com.zaxxer.hikari.HikariDataSource

server:
  port: 3032
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka.server.com:1010/eureka/  #服务注册地址
    registry-fetch-interval-seconds: 5  #eureka client配置5s从server同步一次服务列表

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:/mapper/*.xml

#暴露hystrix.stream的监控信息
management:
  endpoints:
    web:
      exposure:
        include: 'hystrix.stream'
hystrix:
  dashboard:
    proxy-stream-allow-list: '**'

#参数指定了需要收集监控信息的服务名； 多个以',' 隔开
#turbine:
#  app-config: cloud-payment
#  #指定集群的名称为default，当服务实例非常多的时候，可以启动多个Turbine来
#  #构建不同的聚合集群，而该参数可以区分这些不同的集群，同时该参数可以在
#  #Hystrix仪表盘中用来定位不同的聚合集群，只需在Hystrix Stream的URL中通过cluster
#  #参数来指定。
#  cluster-name-expression: new String('default')
#  #当该参数未true时(默认就是true)，可以让同一主机上的服务通过主机名与端口号
#  #的组合来进行区分，默认情况下会以host来区分不同的服务，这
#  #会使得在本地调试的时候，本机上不同服务聚合成一个服务来统计
#  combine-host-port: true


